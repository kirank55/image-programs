import{r as h,j as e}from"./index-4f7196ad.js";import{r as C,v as j,p as x,D as w,a as y}from"./index-8409cc73.js";import{F as p}from"./list-66886101.js";import{S as N,d as S,L as z,A as b}from"./index-103b99c7.js";const D=t=>{const{file:s}=t,{error:i}=s,{setUploadedFiles:c,setCompressedimages:m}=h.useContext(p),a=l=>{c(r=>r.filter(o=>o.uuid!==l)),m(r=>r.filter(o=>o.uuid!==l)),b(l)};return e.jsx(e.Fragment,{children:i?e.jsx("li",{className:"converted-file error",id:s.uuid,children:e.jsxs("div",{className:"converted-file-content",children:[e.jsxs("span",{className:"filename",style:{width:"100%"},children:["Error: (",s.name,") Unsupported format type"]}),e.jsx("div",{className:"downloadimg",children:e.jsx("button",{className:"delete",style:{margin:"0 5vw",border:"none"},onClick:()=>a(s.uuid),children:e.jsx("i",{className:"fa-solid fa-trash",style:{fontSize:"20px"}})})})]})},s.uuid):e.jsx("li",{className:"converted-file",id:s.uuid,children:e.jsxs("div",{className:"converted-file-content",children:[e.jsx("span",{className:"fileimg",children:e.jsx("i",{className:"fa-solid fa-file"})}),e.jsxs("span",{className:"filename",children:[s.name," from ",e.jsx("blockquote",{children:s.originalSize})," to"," ",e.jsx("blockquote",{children:s.compressedSize})]}),e.jsxs("div",{className:"downloadimg",children:[e.jsx("a",{href:s.src,download:s.name,className:"med-link",children:e.jsx("span",{children:"Download"})}),e.jsx("button",{className:"delete",style:{margin:"0 5vw",border:"none"},onClick:()=>a(s.uuid),"aria-label":"delete",children:e.jsx("i",{className:"fa-solid fa-trash",style:{fontSize:"20px"},title:"Delete"})})]})]})},s.uuid)})};async function F(t,s,i){return await new Promise(m=>{let a=new Image;a.src=t,a.onload=()=>{if(i==="medium"){console.log("normal compression");let l=document.createElement("canvas"),r=a.width,o=a.height;l.width=r,l.height=o,l.getContext("2d").drawImage(a,0,0,r,o),m(l.toDataURL(s,.1)),console.log(s,.1)}if(i==="high"){console.log("high compression");let l=document.createElement("canvas"),r=a.width/2,o=a.height/2;l.width=r,l.height=o,l.getContext("2d").drawImage(a,0,0,r,o),m(l.toDataURL(s,.1))}}})}function k(t){let s=1;t.endsWith("==")&&(s=2);const i=t.length*(3/4)-s;return Math.round(i/1024)}async function L(t){return await new Promise(i=>{let c=new FileReader;c.onload=m=>i(c.result),c.onerror=m=>{console.log(m),alert("An Error occurred please try again, File might be corrupt")},c.readAsDataURL(t)})}const A=()=>{const{UploadedFiles:t,CompressionLevel:s,Compressedimages:i,setCompressedimages:c,zipStatus:m,setZipStatus:a}=h.useContext(p),[l,r]=h.useState(!1);//! else if the compression fails then update the error to setCompressedimages state
async function o(n){try{const d=await L(n.filedata),u=await F(d,n.filedata.type,s),f=k(u)+"KB",g={uuid:n.uuid,src:u,name:n.filedata.name,originalSize:C(n.filedata.size),compressedSize:f};c(v=>[...v,g])}catch(d){const u={uuid:n.uuid,error:!0,name:n.filedata.name};c(f=>[...f,u]),console.log("error compressing "+n.filedata.name),console.log(d)}}//! If the file has already been converted avoid converting the files again (incase of a rerender).
return h.useEffect(()=>{function n(){for(const d of t){const u=f=>f.uuid===d.uuid;console.log(d),i.some(u)?console.log("data exists for"+d.filedata.name):o(d)}}n()},[t]),h.useEffect(()=>{N({arg1:t.length,arg2:i.length,setLoading:r})},[t,i]),h.useEffect(()=>{m&&(S(i),setTimeout(()=>{a(!1)},500))},[m]),e.jsx(e.Fragment,{children:l?e.jsx(z,{num:t.length}):i.map(n=>e.jsx(D,{file:n},n.uuid))})},U=()=>{const{UploadedFiles:t,setUploadedFiles:s,CompressionLevel:i,setCompressionLevel:c,setCompressedimages:m,setZipStatus:a}=h.useContext(p),l=()=>{s([])},r=()=>{a(!0);//! This return statement is necessary to prevent rerender of this component.
},o=n=>{if(c(n),!t.length)return;let d=[];for(const u of t)d=[...d,{uuid:j(),filedata:u.filedata}];m([]),s(d)};return e.jsxs("div",{className:"converted-files",children:[e.jsx("h3",{style:{textAlign:"center"},children:"100kb of Minimum Image size required."}),e.jsxs("div",{className:"convfileheading",children:[e.jsx("h2",{children:"Compression Level"}),e.jsxs("div",{style:{display:"flex",justifyContent:"center"},children:[e.jsx("button",{className:`med-link styled-corner-small ${i==="medium"&&"active"}`,onClick:()=>o("medium"),children:"Medium"}),e.jsx("button",{className:`med-link styled-corner-small ${i==="high"&&"active"}`,onClick:()=>o("high"),children:"High"})]})]}),t.length!=0&&e.jsxs("div",{className:"converted-files",children:[e.jsxs("div",{className:"convfileheading",children:[e.jsx("h2",{children:"Here's your compressed files"}),e.jsxs("div",{style:{display:"flex",justifyContent:"center"},children:[e.jsx("button",{className:"med-link styled-corner-small",onClick:l,children:"Clear All"}),e.jsx("button",{className:"med-link styled-corner-small",onClick:r,children:"Download All as Zip"})]})]}),e.jsx("ol",{className:"converted-files-list",children:e.jsx(A,{})})]})]})},R=()=>{const[t,s]=h.useState([]),[i,c]=h.useState("high"),[m,a]=h.useState([]),[l,r]=h.useState(!1),o={UploadedFiles:t,setUploadedFiles:s,CompressionLevel:i,setCompressionLevel:c,Compressedimages:m,setCompressedimages:a,zipStatus:l,setZipStatus:r};function n(d){x(d);const u=d.dataTransfer.files;let f=[];if(u.length){for(const g of u)f=[...f,{uuid:j(),filedata:g}];s(g=>(console.log([...g,...f]),[...g,...f])),console.log("file updated to UploadedFiles state")}}return e.jsxs("div",{className:"converter-container",onDrop:n,onDragOver:x,children:[e.jsx("h1",{style:{padding:"1em",textAlign:"center"},children:"Drag and Drop the image to start Compressing."}),e.jsx(w,{setUploadedFiles:s}),e.jsx(p.Provider,{value:{...o},children:e.jsx(U,{})}),e.jsx(y,{}),e.jsxs("div",{className:"supported-formats-list",style:{padding:"1em",textAlign:"center"},children:[e.jsx("h2",{children:"Supported Formats."}),e.jsxs("ol",{type:"1",style:{maxWidth:"35px",marginInline:"auto",fontSize:"1.5em"},children:[e.jsx("li",{children:"JPG"}),e.jsx("li",{children:"PNG"}),e.jsx("li",{children:"BMP"})]})]})]})};export{R as default};
